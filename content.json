{"meta":{"title":"泽阳 | 追逐繁星的孩子","subtitle":null,"description":"朝问道、","author":"Allen泽阳","url":"http://git.zhoumq.cn"},"pages":[{"title":"关于","date":"2017-11-30T19:13:07.000Z","updated":"2017-12-01T15:30:14.000Z","comments":false,"path":"about/index.html","permalink":"http://git.zhoumq.cn/about/index.html","excerpt":"","text":"Allen &amp;&amp; 泽阳 Java工程师，Node.js爱好者，Ubuntu用户 努力、极客、文艺青年 邮箱: mail@zhoumq.cn知乎: https://www.zhihu.com/people/zhoumingquegithub: https://github.com/zhoumingque/"},{"title":"标签","date":"2017-09-23T02:25:28.000Z","updated":"2017-11-30T19:12:10.000Z","comments":false,"path":"tags/index.html","permalink":"http://git.zhoumq.cn/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2017-09-23T02:25:28.000Z","updated":"2017-11-30T19:11:44.000Z","comments":false,"path":"categories/index.html","permalink":"http://git.zhoumq.cn/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"koa2 定制化框架设计","slug":"koa20171201","date":"2017-11-30T20:20:48.000Z","updated":"2017-12-01T15:31:14.000Z","comments":true,"path":"2017/12/01/koa20171201/","link":"","permalink":"http://git.zhoumq.cn/2017/12/01/koa20171201/","excerpt":"","text":"占位","categories":[{"name":"Node.js","slug":"Node-js","permalink":"http://git.zhoumq.cn/categories/Node-js/"}],"tags":[{"name":"koa2","slug":"koa2","permalink":"http://git.zhoumq.cn/tags/koa2/"},{"name":"Node.js","slug":"Node-js","permalink":"http://git.zhoumq.cn/tags/Node-js/"},{"name":"async/await","slug":"async-await","permalink":"http://git.zhoumq.cn/tags/async-await/"}]},{"title":"变量声明之旅","slug":"test","date":"2017-11-30T16:28:10.000Z","updated":"2017-12-03T01:27:35.000Z","comments":true,"path":"2017/12/01/test/","link":"","permalink":"http://git.zhoumq.cn/2017/12/01/test/","excerpt":"","text":"var、let、const 定义变量var 定义的变量允许变量提升（Hoisting），还涉及到 变量进行 LHS（Left Hand Side）查找123举个栗子：console.log(x); // var is upvar x = 'var is up'; 但是得注意一下，var声明的变量可以提升，但是如果是一个定义一个函数，函数表达式是不可以提升的，如下:12345678910var x = func();var func = function()&#123; return 'this is function';&#125;// 相当于下面的代码：var func = undefined;var x = func();func = function()&#123; return 'this is function';&#125; 上面那段代码会被爆出TypeError,变量func被提升了，但是后面的函数表达式没被提升，提升的func的初始化是var func = undefined,上面的操作相当于undefined(),所以就爆TypeError了; 作用域var 并不是块级作用域，所以容易造成作用域污染，在全局作用域下用var定义一个变量会被挂载到global或window中,看下面这段代码：1234function test()&#123; for(var i = 0; i &lt; 3; i++)&#123;&#125; console.log(i); // 3&#125; 上面那段代码，在}外依旧能访问到 i 。let 是块级作用域，而且在全局作用域定义的变量并不会被挂载到global货window中：1234function test()&#123; for(let i = 0; i &lt; 3; i++)&#123;&#125; console.log(i); // i is defined&#125; const 是定义常量，和java的final关键字类似，但是有一点区别的是，const定义的如果的对象，则对象里面的参数值是可以改变的，const的作用是保证初始定义的变量的内存地址是不变的。123456const a = 1;a = 2; // Assignment to constant variableconst obj = &#123;&#125;;obj.a = 1;console.log(obj.a); // 1","categories":[{"name":"JavsScript","slug":"JavsScript","permalink":"http://git.zhoumq.cn/categories/JavsScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://git.zhoumq.cn/tags/JavaScript/"},{"name":"let","slug":"let","permalink":"http://git.zhoumq.cn/tags/let/"},{"name":"const","slug":"const","permalink":"http://git.zhoumq.cn/tags/const/"},{"name":"var","slug":"var","permalink":"http://git.zhoumq.cn/tags/var/"}]}]}